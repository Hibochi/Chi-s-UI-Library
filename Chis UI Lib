--[[

Credit: Made by Hibochi#5683

]]

local library = {}

function library:ToggleUI()
    if game.CoreGui:FindFirstChild("ChisUiLib").Enabled  then
        game.CoreGui:FindFirstChild("ChisUiLib").Enabled = false
    else
        game.CoreGui:FindFirstChild("ChisUiLib").Enabled = true
    end
end

for i, v in pairs(game:GetService("CoreGui"):GetChildren()) do
    if v:IsA("ScreenGui") and v.Name == "ChisUiLib" then
        v:Destroy()
    end
end

local focusing = false

function library:CreateLib(arg)
    local BodyYSize = 0

    local ChisUiLib = Instance.new("ScreenGui")
    local MainContainer = Instance.new("Frame")
    local UICorner = Instance.new("UICorner")
    local Pages = Instance.new("Folder")
    local TabContainer = Instance.new("ScrollingFrame")
    local UIPadding = Instance.new("UIPadding")
    local UIListLayout = Instance.new("UIListLayout")
    local TitleFrame = Instance.new("Frame")
    local UiName = Instance.new("TextLabel")
    local UICorner_2 = Instance.new("UICorner")

    

    --Properties:

    ChisUiLib.Name = "ChisUiLib"
    ChisUiLib.Parent = game:GetService("CoreGui")
    ChisUiLib.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
    ChisUiLib.ResetOnSpawn = false
    
    MainContainer.Name = "MainContainer"
    MainContainer.Parent = ChisUiLib
    MainContainer.AnchorPoint = Vector2.new(0.5, 0.5)
    MainContainer.BackgroundColor3 = Color3.fromRGB(20, 20, 20)
    MainContainer.Position = UDim2.new(0.499534041, 0, 0.5, 0)
    MainContainer.Size = UDim2.new(0.430568486, 0, 0.775401056, 0)
    MainContainer.Active = true
    MainContainer.Draggable = true
    
    UICorner.Parent = MainContainer
    
    Pages.Name = "Pages"
    Pages.Parent = MainContainer

    TabContainer.Name = "TabContainer"
    TabContainer.Parent = MainContainer
    TabContainer.Active = true
    TabContainer.BackgroundColor3 = Color3.fromRGB(13, 13, 13)
    TabContainer.BorderSizePixel = 0
    TabContainer.Position = UDim2.new(0, 0, 0.134482756, 0)
    TabContainer.Size = UDim2.new(0.220779225, 0, 0.865517259, 0)
    TabContainer.ScrollBarThickness = 5
    
    UIPadding.Parent = TabContainer
    UIPadding.PaddingLeft = UDim.new(0, 3)
    UIPadding.PaddingTop = UDim.new(0, 5)
    
    UIListLayout.Parent = TabContainer
    UIListLayout.SortOrder = Enum.SortOrder.LayoutOrder
    UIListLayout.Padding = UDim.new(0, 5)

    TitleFrame.Name = "TitleFrame"
    TitleFrame.Parent = MainContainer
    TitleFrame.BackgroundColor3 = Color3.fromRGB(15, 15, 15)
    TitleFrame.Size = UDim2.new(1, 0, 0.134482756, 0)

    UiName.Name = "UiName"
    UiName.Parent = TitleFrame
    UiName.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    UiName.BackgroundTransparency = 1.000
    UiName.BorderSizePixel = 0
    UiName.Size = UDim2.new(1, 0, 1, 0)
    UiName.Font = Enum.Font.Cartoon
    UiName.Text = arg
    UiName.TextColor3 = Color3.fromRGB(255, 255, 255)
    UiName.TextScaled = true
    UiName.TextSize = 14.000
    UiName.TextWrapped = true

    UICorner_2.Parent = TitleFrame

    local function UpdateTabSize()
        local cS = UIListLayout.AbsoluteContentSize

        game.TweenService:Create(TabContainer, TweenInfo.new(0.15, Enum.EasingStyle.Linear, Enum.EasingDirection.In), {
            CanvasSize = UDim2.new(0,cS.X,0,cS.Y)
        }):Play()
    end

    UpdateTabSize()

    local TabButtons = {}

    function TabButtons:AddTab(text)

        local TabButton = Instance.new("TextButton")
        local UICorner = Instance.new("UICorner")
        local ContainerList = Instance.new("ScrollingFrame")
        local UIListLayout = Instance.new("UIListLayout")
        local UIPadding = Instance.new("UIPadding")

        local function UpdateSize()
            local cS = UIListLayout.AbsoluteContentSize

            game.TweenService:Create(ContainerList, TweenInfo.new(0.15, Enum.EasingStyle.Linear, Enum.EasingDirection.In), {
                CanvasSize = UDim2.new(0,cS.X,0,cS.Y)
            }):Play()
        end

        local function Resize(v)
            BodyYSize = BodyYSize + v
            ContainerList.Size = UDim2.new(0.77922076, 0, 0.84827584, BodyYSize)
        end
        TabButton.Name = text.." TabButton"
        TabButton.Parent = TabContainer
        TabButton.BackgroundColor3 = Color3.fromRGB(18, 18, 18)
        TabButton.Position = UDim2.new(0.00980392192, 0, 0, 0)
        TabButton.Size = UDim2.new(0, 115,0, 28)
        TabButton.Font = Enum.Font.Cartoon
        TabButton.Text = text.." Tab"
        TabButton.TextColor3 = Color3.fromRGB(255, 255, 255)
        TabButton.TextScaled = true
        TabButton.TextSize = 14.000
        TabButton.TextWrapped = true
        
        UICorner.Parent = TabButton

        ContainerList.Name = "ContainerList"
        ContainerList.Parent = Pages
        ContainerList.Active = true
        ContainerList.AnchorPoint = Vector2.new(0.5, 0.5)
        ContainerList.BackgroundColor3 = Color3.fromRGB(20, 20, 20)
        ContainerList.BorderSizePixel = 0
        ContainerList.BackgroundTransparency = 1
        ContainerList.Position = UDim2.new(0.611999989, 0, 0.574999988, 0)
        ContainerList.Size = UDim2.new(0.77922076, 0, 0.84827584, 0)
        ContainerList.ScrollBarThickness = 5

        ContainerList.Size = UDim2.new(0.77922076, 0, 0.84827584, BodyYSize)
        
        UIListLayout.Parent = ContainerList
        UIListLayout.SortOrder = Enum.SortOrder.LayoutOrder
        UIListLayout.Padding = UDim.new(0, 8)
        
        UIPadding.Parent = ContainerList
        UIPadding.PaddingTop = UDim.new(0, 5)

        for i, v in next, Pages:GetChildren() do
            v.Visible = false
        end

        TabButton.MouseButton1Click:Connect(function()
            UpdateSize()
            UpdateTabSize()
            for i, v in next, Pages:GetChildren() do
                v.Visible = false
            end
            ContainerList.Visible = true
        end)

        local Sections = {}

        function Sections:AddSection(secName)
            secName = secName or "Section"
            local SectionNameFrame = Instance.new("Frame")
            local UICorner = Instance.new("UICorner")
            local SectionName = Instance.new("TextLabel")

            for i,v in pairs(SectionNameFrame:GetChildren()) do
                while wait() do
                    if v:IsA("Frame") or v:IsA("TextButton") then
                        function size(pro)
                            if pro == "Size" then
                                UpdateSize()
                            end
                        end
                        v.Changed:Connect(size)
                    end
                end
            end

            SectionNameFrame.Name = "SectionNameFrame"
            SectionNameFrame.Parent = ContainerList
            SectionNameFrame.BackgroundColor3 = Color3.fromRGB(15, 15, 15)
            SectionNameFrame.Position = UDim2.new(-8.47710524e-08, 0, 0.0203252025, 0)
            SectionNameFrame.Size = UDim2.new(0.996999979, 0, 0.0896814838, 0)
            
            UICorner.Parent = SectionNameFrame
            
            SectionName.Name = "SectionName"
            SectionName.Parent = SectionNameFrame
            SectionName.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
            SectionName.BackgroundTransparency = 1.000
            SectionName.Position = UDim2.new(0, 0, -4.62387561e-07, 0)
            SectionName.Size = UDim2.new(0.997455537, 0, 0.950023055, 0)
            SectionName.Font = Enum.Font.Cartoon
            SectionName.Text = secName
            SectionName.TextColor3 = Color3.fromRGB(255, 255, 255)
            SectionName.TextScaled = true
            SectionName.TextSize = 14.000
            SectionName.TextWrapped = true

            local Buttons_functions = {}

            function Buttons_functions:AddButton(text, callback)
                local callback = callback or function() end
                local Button = Instance.new("TextButton")
                local UICorner = Instance.new("UICorner")           
        
                Button.Name = text.." Button"
                Button.Parent = ContainerList
                Button.AnchorPoint = Vector2.new(0.5, 0.5)
                Button.BackgroundColor3 = Color3.fromRGB(18, 18, 18)
                Button.Position = UDim2.new(0.5, 0, 0.143810153, 0)
                Button.Size = UDim2.new(1, 0, 0.0591750294, 0)
                Button.Font = Enum.Font.Cartoon
                Button.Text = text
                Button.TextColor3 = Color3.fromRGB(255, 255, 255)
                Button.TextScaled = true
                Button.TextSize = 14.000
                Button.TextWrapped = true
                
                UICorner.Parent = Button
        
                Button.MouseButton1Click:Connect(function()
                    pcall(callback)
                end)
            end

            function Buttons_functions:AddLabel(text)
                text = text or "Label"
                local LabelFrame = Instance.new("Frame")
                local UICorner = Instance.new("UICorner")
                local LabelName = Instance.new("TextLabel")

                LabelFrame.Name = "LabelFrame"
                LabelFrame.Parent = ContainerList
                LabelFrame.BackgroundColor3 = Color3.fromRGB(15, 15, 15)
                LabelFrame.Position = UDim2.new(-8.47710524e-08, 0, 0.0203252025, 0)
                LabelFrame.Size = UDim2.new(1, 0, 0.0590000004, 0)

                UICorner.Parent = LabelFrame

                LabelName.Name = "LabelName"
                LabelName.Parent = LabelFrame
                LabelName.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
                LabelName.BackgroundTransparency = 1.000
                LabelName.Position = UDim2.new(0, 0, -8.09992059e-07, 0)
                LabelName.Size = UDim2.new(0.997933149, 0, 0.987043977, 0)
                LabelName.Font = Enum.Font.Cartoon
                LabelName.Text = text
                LabelName.TextColor3 = Color3.fromRGB(255, 255, 255)
                LabelName.TextScaled = true
                LabelName.TextSize = 14.000
                LabelName.TextWrapped = true
            end

            function Buttons_functions:AddKeybind(nametext, first, callback)
                nametext = nametext or "Keybind:"
                callback = callback or function () end
                local oldkey = first.Name
                local KeybindBox = Instance.new("TextButton")
                local UICorner = Instance.new("UICorner")
                local Keybindname = Instance.new("TextLabel")
                local Title = Instance.new("TextLabel")           

                KeybindBox.Name = "KeybindBox"
                KeybindBox.Parent = ContainerList
                KeybindBox.AnchorPoint = Vector2.new(0.5, 0.5)
                KeybindBox.BackgroundColor3 = Color3.fromRGB(18, 18, 18)
                KeybindBox.Position = UDim2.new(0.5, 0, 0.207201138, 0)
                KeybindBox.Size = UDim2.new(1, 0, 0.0591750294, 0)
                KeybindBox.Font = Enum.Font.Cartoon
                KeybindBox.Text = ""
                KeybindBox.TextColor3 = Color3.fromRGB(255, 255, 255)
                KeybindBox.TextScaled = true
                KeybindBox.TextSize = 14.000
                KeybindBox.TextWrapped = true
                KeybindBox.TextXAlignment = Enum.TextXAlignment.Right
                
                UICorner.Parent = KeybindBox
                
                Keybindname.Name = "Keybindname"
                Keybindname.Parent = KeybindBox
                Keybindname.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
                Keybindname.BackgroundTransparency = 1.000
                Keybindname.Position = UDim2.new(0.686429739, 0, 0, 0)
                Keybindname.Size = UDim2.new(0.289642572, 0, 0.952380955, 0)
                Keybindname.Font = Enum.Font.Cartoon
                Keybindname.Text = oldkey
                Keybindname.TextColor3 = Color3.fromRGB(255, 255, 255)
                Keybindname.TextScaled = true
                Keybindname.TextSize = 14.000
                Keybindname.TextWrapped = true
                
                Title.Name = "Title"
                Title.Parent = KeybindBox
                Title.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
                Title.BackgroundTransparency = 1.000
                Title.Size = UDim2.new(0.682355642, 0, 0.952380955, 0)
                Title.Font = Enum.Font.Cartoon
                Title.Text = nametext
                Title.TextColor3 = Color3.fromRGB(255, 255, 255)
                Title.TextScaled = true
                Title.TextSize = 14.000
                Title.TextWrapped = true

                KeybindBox.MouseButton1Click:Connect(function(k)
                    if not focusing then
                        Keybindname.Text = ". . ."
                        local e, r = game:GetService("UserInputService").InputBegan:Wait()
                        if e.KeyCode.Name ~= "Unknown" then
                            Keybindname.Text = e.KeyCode.Name
                            oldkey = e.KeyCode.Name;
                        end
                    end
                end)

                game:GetService("UserInputService").InputBegan:connect(function(current, ok) 
                    if not ok then 
                        if current.KeyCode.Name == oldkey then 
                            callback()
                        end
                    end
                end)

            end

            function Buttons_functions:AddToggle(text, value, indicator,callback)
                local actions = {}
                local toggled = value
                local colorIndicator = indicator

                text = text or "Toggle"
                callback = callback or function () end

                local Toggle = Instance.new("TextLabel")
                local UICorner = Instance.new("UICorner")
                local BackgroundToggle = Instance.new("TextButton")
                local UICorner_2 = Instance.new("UICorner")
                local InnerToggle = Instance.new("TextLabel")
                local UICorner_3 = Instance.new("UICorner")

                Toggle.Name = text.." Toggle"
                Toggle.Parent = ContainerList
                Toggle.AnchorPoint = Vector2.new(0.5, 0.5)
                Toggle.BackgroundColor3 = Color3.fromRGB(18, 18, 18)
                Toggle.BorderSizePixel = 0
                Toggle.Size = UDim2.new(1, 0, 0.0590000004, 0)
                Toggle.Font = Enum.Font.Cartoon
                Toggle.Text = text
                Toggle.TextColor3 = Color3.fromRGB(255, 255, 255)
                Toggle.TextScaled = true
                Toggle.TextSize = 14.000
                Toggle.TextWrapped = true

                UICorner.Parent = Toggle

                BackgroundToggle.Name = "BackgroundToggle"
                BackgroundToggle.Parent = Toggle
                if colorIndicator then
                    BackgroundToggle.BackgroundColor3 = toggled and Color3.fromRGB(0 ,255, 0) or Color3.fromRGB(25, 25, 25)
                else
                    BackgroundToggle.BackgroundColor3 = Color3.fromRGB(20, 20, 20)
                end
                BackgroundToggle.Position = UDim2.new(0.766666651, 0, 0.08843036, 0)
                BackgroundToggle.Size = UDim2.new(0.208333328, 0, 0.795873284, 0)
                BackgroundToggle.Font = Enum.Font.SourceSans
                BackgroundToggle.Text = ""
                BackgroundToggle.TextColor3 = Color3.fromRGB(0, 0, 0)
                BackgroundToggle.TextSize = 14.000

                UICorner_2.Parent = BackgroundToggle

                InnerToggle.Name = "InnerToggle"
                InnerToggle.Parent = BackgroundToggle
                InnerToggle.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
                InnerToggle.Position = toggled and UDim2.new(0.48, 0,0, 0) or UDim2.new(0, 0,0, 0)
                InnerToggle.Size = UDim2.new(0.519999981, 0, 1, 0)
                InnerToggle.Font = Enum.Font.SourceSans
                InnerToggle.Text = ""
                InnerToggle.TextColor3 = Color3.fromRGB(255, 255, 255)
                InnerToggle.TextSize = 14.000

                UICorner_3.Parent = InnerToggle

                local function fire()
                    toggled = not toggled
                    InnerToggle:TweenPosition(toggled and UDim2.new(0.48, 0,0, 0) or UDim2.new(0, 0,0, 0), "InOut", "Quint", 0.5, true)
                    if colorIndicator then
                        BackgroundToggle.BackgroundColor3 = toggled and Color3.fromRGB(0 ,255, 0) or Color3.fromRGB(25, 25, 25)
                    else
                        BackgroundToggle.BackgroundColor3 = Color3.fromRGB(20, 20, 20)
                    end
                    pcall(callback, toggled)
                end

                BackgroundToggle.MouseButton1Click:Connect(fire)

                function actions:UpdateToggle(arg, value)
                    Toggle.Text = arg
                    value = value
                    if value then
                        toggled = true
                        InnerToggle:TweenPosition(toggled and UDim2.new(0.48, 0,0, 0) or UDim2.new(0, 0,0, 0), "InOut", "Quint", 0.5, true)
                        if colorIndicator then
                            BackgroundToggle.BackgroundColor3 = toggled and Color3.fromRGB(0 ,255, 0) or Color3.fromRGB(25, 25, 25)
                        else
                            BackgroundToggle.BackgroundColor3 = Color3.fromRGB(20, 20, 20)
                        end
                        pcall(callback, toggled)
                    else
                        toggled = false
                        InnerToggle:TweenPosition(toggled and UDim2.new(0.48, 0,0, 0) or UDim2.new(0, 0,0, 0), "InOut", "Quint", 0.5, true)
                        if colorIndicator then
                            BackgroundToggle.BackgroundColor3 = toggled and Color3.fromRGB(0 ,255, 0) or Color3.fromRGB(25, 25, 25)
                        else
                            BackgroundToggle.BackgroundColor3 = Color3.fromRGB(20, 20, 20)
                        end
                        pcall(callback, toggled)
                    end
                end
                return actions
            end

            function Buttons_functions:AddSlider(title, minvalue, maxvalue, callback)
                minvalue = minvalue or 0
                maxvalue = maxvalue or 100
                callback = callback or function() end
                title = title or "Slider"
                local Value
                local mouse = game.Players.LocalPlayer:GetMouse()
                local uis = game:GetService("UserInputService")

                local SliderFrame = Instance.new("Frame")
                local UICorner = Instance.new("UICorner")
                local SliderName = Instance.new("TextLabel")
                local SlideButton = Instance.new("TextButton")
                local UICorner_2 = Instance.new("UICorner")
                local Slider = Instance.new("Frame")
                local UICorner_3 = Instance.new("UICorner")
                local SliderValue = Instance.new("TextLabel")

                SliderFrame.Name = "SliderFrame"
                SliderFrame.Parent = ContainerList
                SliderFrame.AnchorPoint = Vector2.new(0.5, 0.5)
                SliderFrame.BackgroundColor3 = Color3.fromRGB(18, 18, 18)
                SliderFrame.Position = UDim2.new(0.5, 0, 0.76617986, 0)
                SliderFrame.Size = UDim2.new(1, 0, 0.0813024119, 0)

                UICorner.Parent = SliderFrame

                SliderName.Name = "SliderName"
                SliderName.Parent = SliderFrame
                SliderName.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
                SliderName.BackgroundTransparency = 1.000
                SliderName.BorderSizePixel = 0
                SliderName.Size = UDim2.new(0.766666651, 0, 0.405333608, 0)
                SliderName.Font = Enum.Font.Cartoon
                SliderName.Text = title
                SliderName.TextColor3 = Color3.fromRGB(255, 255, 255)
                SliderName.TextScaled = true
                SliderName.TextSize = 14.000
                SliderName.TextWrapped = true

                SlideButton.Name = "SlideButton"
                SlideButton.Parent = SliderFrame
                SlideButton.BackgroundColor3 = Color3.fromRGB(25, 25, 25)
                SlideButton.BorderSizePixel = 0
                SlideButton.Position = UDim2.new(0.0199999996, 0, 0.449999988, 0)
                SlideButton.Size = UDim2.new(0.961111128, 0, 0.405333608, 0)
                SlideButton.AutoButtonColor = false
                SlideButton.Font = Enum.Font.SourceSans
                SlideButton.Text = ""
                SlideButton.TextColor3 = Color3.fromRGB(0, 0, 0)
                SlideButton.TextSize = 14.000

                UICorner_2.Parent = SlideButton

                Slider.Name = "Slider"
                Slider.Parent = SlideButton
                Slider.BackgroundColor3 = Color3.fromRGB(255, 132, 25)
                Slider.Size = UDim2.new(0, 0,1, 0)

                UICorner_3.Parent = Slider

                SliderValue.Name = "SliderValue"
                SliderValue.Parent = SliderFrame
                SliderValue.BackgroundColor3 = Color3.fromRGB(25, 25, 25)
                SliderValue.BackgroundTransparency = 1.000
                SliderValue.BorderSizePixel = 0
                SliderValue.Position = UDim2.new(0.782999992, 0, 0.064000003, 0)
                SliderValue.Size = UDim2.new(0.197222218, 0, 0.320000201, 0)
                SliderValue.Font = Enum.Font.Cartoon
                SliderValue.Text = minvalue
                SliderValue.TextColor3 = Color3.fromRGB(255, 255, 255)
                SliderValue.TextScaled = true
                SliderValue.TextSize = 14.000
                SliderValue.TextWrapped = true
                
                UpdateSize()

                SlideButton.MouseButton1Down:Connect(function()
                    if not focusing then
                        Value = math.floor((((tonumber(maxvalue) - tonumber(minvalue)) / 440) * Slider.AbsoluteSize.X) + tonumber(minvalue)) or 0
                        pcall(function()
                            callback(Value)
                        end)
                        Slider:TweenSize(UDim2.new(0, math.clamp(mouse.X - Slider.AbsolutePosition.X, 0, 440), 0, 16), "InOut", "Quint", 0.05, true)
                        moveconnection = mouse.Move:Connect(function()
                            SliderValue.Text = Value
                            Value = math.floor((((tonumber(maxvalue) - tonumber(minvalue)) / 440) * Slider.AbsoluteSize.X) + tonumber(minvalue))
                            pcall(function()
                                callback(Value)
                            end)
                            Slider:TweenSize(UDim2.new(0, math.clamp(mouse.X - Slider.AbsolutePosition.X, 0, 440), 0, 16), "InOut", "Quint", 0.05, true)
                        end)
                        releaseconnection = uis.InputEnded:Connect(function(Mouse)
                            if Mouse.UserInputType == Enum.UserInputType.MouseButton1 then
                                Value = math.floor((((tonumber(maxvalue) - tonumber(minvalue)) / 440) * Slider.AbsoluteSize.X) + tonumber(minvalue))
                                pcall(function()
                                    callback(Value)
                                end)
                                SliderValue.Text = Value
                                Slider:TweenSize(UDim2.new(0, math.clamp(mouse.X - Slider.AbsolutePosition.X, 0, 440), 0, 16), "InOut", "Quint", 0.05, true)
                                moveconnection:Disconnect()
                                releaseconnection:Disconnect()
                            end
                        end)
                    end
                end)
            end

            function Buttons_functions:AddTextBox(tBox, callback)
                tBox = tBox or "TextBox"
                callback = callback or function() end

                local TextBox = Instance.new("TextLabel")
                local UICorner = Instance.new("UICorner")
                local Box = Instance.new("TextBox")
                local UICorner_2 = Instance.new("UICorner")

                TextBox.Name = tBox.." TextBox"
                TextBox.Parent = ContainerList
                TextBox.AnchorPoint = Vector2.new(0.5, 0.5)
                TextBox.BackgroundColor3 = Color3.fromRGB(18, 18, 18)
                TextBox.BorderSizePixel = 0
                TextBox.Size = UDim2.new(1, 0, 0.0590000004, 0)
                TextBox.Font = Enum.Font.Cartoon
                TextBox.Text = tBox
                TextBox.TextColor3 = Color3.fromRGB(255, 255, 255)
                TextBox.TextScaled = true
                TextBox.TextSize = 14.000
                TextBox.TextWrapped = true

                UICorner.Parent = TextBox

                Box.Name = "Box"
                Box.Parent = TextBox
                Box.BackgroundColor3 = Color3.fromRGB(25, 25, 25)
                Box.Position = UDim2.new(0.76700002, 0, 0.0879999995, 0)
                Box.Size = UDim2.new(0.208000019, 0, 0.796000004, 0)
                Box.ClearTextOnFocus = false
                Box.Font = Enum.Font.Cartoon
                Box.PlaceholderColor3 = Color3.fromRGB(255, 255, 255)
                Box.PlaceholderText = "Type Here"
                Box.Text = ""
                Box.TextColor3 = Color3.fromRGB(255, 255, 255)
                Box.TextScaled = true
                Box.TextSize = 14.000
                Box.TextWrapped = true

                UICorner_2.Parent = Box

                Box.FocusLost:Connect(function(enterPressed)
                    if not enterPressed then
                        return
                    else
                        callback(Box.Text)
                        wait(0.2)
                        Box.Text = ""
                    end
                end)
            end

            function Buttons_functions:AddDropdown(dropdownText, list, callback)
                dropdownText = dropdownText or "Dropdown"
                list = list or {}
                callback = callback or function() end

                local DropYSize = 0
                local isDropped = false

                Resize(33)

                local UIListLayout = Instance.new("UIListLayout")
                local Option = Instance.new("TextButton")
                local UICorner = Instance.new("UICorner")

                local DropdownFrame = Instance.new("Frame")
                local DropdownButton = Instance.new("TextButton")
                local UICorner = Instance.new("UICorner")
                local DropdownList = Instance.new("Frame")
                local UICorner_2 = Instance.new("UICorner")

                DropdownFrame.Name = "DropdownFrame"
                DropdownFrame.Parent = ContainerList
                DropdownFrame.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
                DropdownFrame.BackgroundTransparency = 1.000
                DropdownFrame.BorderSizePixel = 0
                DropdownFrame.Position = UDim2.new(0, 0, 0.301621884, 0)
                DropdownFrame.Size = UDim2.new(0, 357, 0, 33)

                DropdownButton.Name = "DropdownButton"
                DropdownButton.Parent = DropdownFrame
                DropdownButton.BackgroundColor3 = Color3.fromRGB(18, 18, 18)
                DropdownButton.Size = UDim2.new(0, 357, 0, 34)
                DropdownButton.Font = Enum.Font.Cartoon
                DropdownButton.Text = dropdownText
                DropdownButton.TextColor3 = Color3.fromRGB(255, 255, 255)
                DropdownButton.TextScaled = true
                DropdownButton.TextSize = 14.000
                DropdownButton.TextWrapped = true
                DropdownButton.MouseButton1Click:Connect(function ()
                    if isDropped then 
                        isDropped = false
                        DropdownList.Size = UDim2.new(0, 357, 0, 148)
                    else
                        isDropped = true
                        DropdownList.Size = UDim2.new(0, 357, 0, DropYSize)
                    end
                end)

                UICorner.Parent = DropdownButton

                DropdownList.Name = "DropdownList"
                DropdownList.Parent = DropdownFrame
                DropdownList.BackgroundColor3 = Color3.fromRGB(25, 25, 25)
                DropdownList.Position = UDim2.new(0, 0, 1.1818186, 0)
                DropdownList.Size = UDim2.new(0, 357, 0, 148)
                DropdownList.ClipsDecendants = true
                local UIListLayout = Instance.new("UIListLayout")
                UIListLayout.Parent = DropdownList
                UIListLayout.HorizontalAlignment = Enum.HorizontalAlignment.Center
                UIListLayout.SortOrder = Enum.SortOrder.LayoutOrder
                UIListLayout.Padding = UDim.new(0, 10)

                UICorner_2.Parent = DropdownList

                for i, v in next, list do
                    local Option = Instance.new("TextButton")
                    local UICorner = Instance.new("UICorner")

                    Option.Name = "Option"
                    Option.Parent = DropdownList
                    Option.BackgroundColor3 = Color3.fromRGB(18, 18, 18)
                    Option.Position = UDim2.new(0.104370117, 0, 0, 0)
                    Option.Size = UDim2.new(0, 280, 0, 30)
                    Option.Font = Enum.Font.Cartoon
                    Option.Text = v
                    Option.TextColor3 = Color3.fromRGB(255, 255, 255)
                    Option.TextScaled = true
                    Option.TextSize = 14.000
                    Option.TextWrapped = true

                    UICorner.Parent = Option

                    DropYSize += 30
                    Option.MouseButton1Click:Connect(function(v)
                        pcall(callback(v))
                    end)
                end
            end
            return Buttons_functions
        end
        return Sections
    end
    do return TabButtons end
end

return library
